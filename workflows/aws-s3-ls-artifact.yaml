apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata: { 'namespace': 'argo', 'name': 'aws-s3-ls-artifact', 'generateName': 'aws-s3-ls-artifact-'}
spec:
  entrypoint: main
  arguments:
    parameters: [ {'name': 's3-bucket', 'value': 'noaa-nws-owp-fim' }, {'name': 's3-key', 'value': 'hand_fim/inputs/nwm_hydrofabric/' } ]
  templates:
    - name: main
      steps:
        - - name: list
            template: s3-listing
        - - name: print
            template: print-s3-listing
            arguments:
              parameters:
              - name: s3-file-list
                value: "{{steps.list.outputs.result}}"
      ## inputs: {}
      ## outputs:
      ##   artifacts:
      ##     - name: s3-recursive-listing
      ##       path: /tmp
      ##       s3: { 'endpoint': 's3.amazaonaws.com', 'bucket': 'azavea-noaa-hydro-data', 'key': 'vl-scratch/s3-listing.txt.tar.gz' } ## artifacts are automaticall tarred and gzipped!
    - name: s3-listing
      container:
        name: amazon/aws-cli
        image: amazon/aws-cli
        command: [ 'aws' ]
        args: [ 's3','ls','--request-payer','requester','s3://{{workflow.parameters.s3-bucket}}/{{workflow.parameters.s3-key}}'] ## cannot use '--request-payer requester' as one argument!
      outputs:
        artifacts:
          - name: save-s3-listing
            path: /tmp/tst.tx
            s3: { 'endpoint': 's3.amazonaws.com', 'bucket': 'azavea-noaa-hydro-data', 'key': 'vl-scratch/s3-listing.txt.tar.gz' }
    - name: print-s3-listing
      inputs:
        parameters: [ {'name': 's3-file-list' } ]
      container:
        image: alpine:latest
        command: [sh,-c]
        args: ["echo result was: {{inputs.parameters.s3-file-list}}"]
  ttlStrategy: { 'secondsAfterCompletion': 900 } ## Set this to higher value to retain pod for inspection!
  podGC: { 'strategy': 'OnPodCompletion' }
