apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata: { 'namespace': 'argo', 'name': 'aws-s3-ls-artifact', 'generateName': 'aws-s3-ls-artifact-'}
spec:
  entrypoint: main
  arguments:
    parameters: [ {'name': 's3-bucket', 'value': 'noaa-nws-owp-fim' }, {'name': 's3-key', 'value': 'hand_fim/inputs/nwm_hydrofabric/' } ]
  templates:
    - name: main
      steps:
        - - name: list
            template: s3-listing
        - - name: print
            template: print-s3-listing
            arguments:
              artifacts:
              - name: msg
                from: "{{steps.list.outputs.artifacts.save-s3-listing}}"
    - name: s3-listing
      container:
        name: amazon/aws-cli
        image: amazon/aws-cli
        command: [sh,-c]
        args: [ ' aws s3 ls --request-payer requester s3://{{workflow.parameters.s3-bucket}}/{{workflow.parameters.s3-key}} | tee /tmp/tst.txt ']
      outputs:
        artifacts:
          - name: save-s3-listing
            path: /tmp/tst.txt
            s3:
              endpoint: 's3.amazonaws.com'
              bucket: 'azavea-noaa-hydro-data'
              key: 'vl-scratch/s3-listing-{{=sprig.date("20060102",workflow.createTiemstamp)}}.txt.tar.gz'
    - name: print-s3-listing
      inputs:
        artifacts: [ {'name': 'msg', 'path': '/tmp/tst.txt'} ] ## ensure that the name matches the artifacts.name in the steps!!!
      container:
        image: alpine:latest
        command: [sh,-c]
        args: ["cat /tmp/tst.txt"] ## TODO (vijay): figure out how to do "cat {{inputs.artifacts.path}}"
  ttlStrategy: { 'secondsAfterCompletion': 900 } ## Set this to higher value to retain pod for inspection!
  podGC: { 'strategy': 'OnPodCompletion' }
